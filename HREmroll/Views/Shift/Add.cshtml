@model HREmroll.Models.Shift
@{
    ViewData["Title"] = "AddShift";
    
        Layout = "_MasterLayout";
    
}


<!-- CSS Includes -->
@*<link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css">*@

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery.inputmask/3.3.4/css/inputmask.min.css" />



<style type="text/css">

    .field-validation-error {
        color: #ff0000;
    }
  
    .form-control_halfDay {
        display: none;
    }

    .form-control_halfDay1 {
        display: none;
    }
    .form-control_halfDay2 {
        display: none;
    }
    .form-control_halfDay3 {
        display: none;
    }
</style>


<!-- JS includes -->
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.min.js"></script>
<script src="//ajax.aspnetcdn.com/ajax/jquery.validate/1.11.1/jquery.validate.min.js"></script>
<script src="//ajax.aspnetcdn.com/ajax/mvc/4.0/jquery.validate.unobtrusive.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-browser/0.1.0/jquery.browser.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.inputmask/3.3.4/bindings/inputmask.binding.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.inputmask/3.3.4/inputmask/inputmask.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.inputmask/3.3.4/inputmask/inputmask.phone.extensions.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.inputmask/3.3.4/inputmask/jquery.inputmask.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.maskedinput/1.4.1/jquery.maskedinput.min.js"></script>

<script type="text/javascript">
    $(document).ready(function ($) {
        //debugger;
        $('.form-time1').inputmask("99:99");
        $('.form-time2').inputmask("99:99");
        $('.form-time3').inputmask("99:99");
        $('.form-time4').inputmask("99:99");
        $('.form-time5').inputmask("99:99");
        $('.form-time7').inputmask("99:99");
        $('.form-time8').inputmask("99:99");
        $('.form-time10').inputmask("99:99");
        $('.form-time11').inputmask("99:99");
        $('.form-control_halfDay').inputmask("99:99");
        $('.form-control_halfDay1').inputmask("99:99");
        $('.form-control_halfDay2').inputmask("99:99");
        $('.form-control_halfDay3').inputmask("99:99");
      
    });

    //debugger;
    $(function () {
        $("#HALF_DAY_ON").click(function () {
            //debugger;
            if ($(this).is(':checked')) {
                $("#HALF_DAY_OF_WEEK").show();
                $("#HALF_DAY_MIN_HOURS").show();
                
                //$("#HALF_DAY_START_TIME").show();
                //$("#HALF_DAY_END_TIME").show();
                //$("#HALF_DAY_DURATION").show();
                $("#half_day_start").show();
                $("#half_day_end").show();
                $("#half_day_duration").show();
                $("#AUTO_SHIFT").show();
            }
            else {
                $("#HALF_DAY_OF_WEEK").hide();
                $("#HALF_DAY_MIN_HOURS").hide();
                //$("#HALF_DAY_START_TIME").hide();
                //$("#HALF_DAY_END_TIME").hide();
                //$("#HALF_DAY_DURATION").hide();
                $("#half_day_start").hide();
                $("#half_day_end").hide();
                $("#half_day_duration").hide();
                $("#AUTO_SHIFT").hide();
            }
        });
      
    });

   

    function validateTime(inputField) {
        //debugger;
        var isValid = /^([0-1]?[0-9]|2[0-4]):([0-5][0-9])(:[0-5][0-9])?$/.test(inputField.value);

        if (isValid) {
            inputField.style.backgroundColor = '#bfa';
            //debugger;
            calculate();
        } else {
            inputField.style.backgroundColor = '#fba';
        }
      
        return isValid;
  
        
    }

    function calculate() {
         //Start Script Calculation.
       
        
        //debugger;
        
        var start_1 = $("#shift_start").val().split(':');
        var end_1 = $("#shift_end").val().split(':');

        
        var start_hours_1 = parseInt(start_1[0], 10) * 3600,
            end_hours_1 = parseInt(end_1[0], 10) * 3600;

        var start_min_1 = parseInt(start_1[1] , 10) * 60;
        var end_min_1 = parseInt(end_1[1], 10) * 60;
        var hr24 = 24 * 3600;
        var tot_start_1 = start_hours_1 + start_min_1;
        var tot_end_1 = end_hours_1 + end_min_1;
        var tot_duration_1 = tot_end_1 - tot_start_1;
        if (tot_duration_1 < 0)
            tot_duration_1 = tot_duration_1 + hr24;

        var duration_hour_1 = parseInt(tot_duration_1 / 3600);
        if (duration_hour_1 < 10)
            duration_hour_1 = '0' + duration_hour_1;

        var duration_min_1 = parseInt((tot_duration_1 % 3600) / 60);
        if (duration_min_1 < 10)
            duration_min_1 = '0' + duration_min_1;
        //var result1 = toString(hr3) + ':' + toString(min3);
        var result1 = duration_hour_1 + ':' + duration_min_1;
        $("#shift_duration").val(result1);

        //ENd Script Calculation.

        //debugger;

        var start_2 = $("#break1_start").val().split(':');
        var end_2 = $("#break1_end").val().split(':');


        var start_hours_2 = parseInt(start_2[0], 10) * 3600,
            end_hours_2 = parseInt(end_2[0], 10) * 3600;

        var start_min_2 = parseInt(start_2[1], 10) * 60;
        var end_min_2 = parseInt(end_2[1], 10) * 60;
        
        var tot_start_2 = start_hours_2 + start_min_2;
        var tot_end_2 = end_hours_2 + end_min_2;
        var tot_duration_2 = tot_end_2 - tot_start_2;
        if (tot_duration_2 < 0)
            tot_duration_2 = tot_duration_2 + hr24;

        var duration_hour_2 = parseInt(tot_duration_2 / 3600);
        if (duration_hour_2 < 10)
            duration_hour_2 = '0' + duration_hour_2;
        var duration_min_2 = parseInt((tot_duration_2 % 3600) / 60);
        if (duration_min_2 < 10)
            duration_min_2 = '0' + duration_min_2;
        var result2 = duration_hour_2 + ':' + duration_min_2;
        $("#break1_duration").val(result2);


        //ENd Script Calculation.

        //debugger;

        var start_3 = $("#break2_start").val().split(':');
        var end_3 = $("#break2_end").val().split(':');


        var start_hours_3 = parseInt(start_3[0], 10) * 3600,
            end_hours_3 = parseInt(end_3[0], 10) * 3600;

        var start_min_3 = parseInt(start_3[1], 10) * 60;
        var end_min_3 = parseInt(end_3[1], 10) * 60;

        var tot_start_3 = start_hours_3 + start_min_3;
        var tot_end_3 = end_hours_3 + end_min_3;
        var tot_duration_3 = tot_end_3 - tot_start_3;
        if (tot_duration_3 < 0)
            tot_duration_3 = tot_duration_3 + hr24;

        var duration_hour_3 = parseInt(tot_duration_3 / 3600);
        if (duration_hour_3 < 10)
            duration_hour_3 = '0' + duration_hour_3;
        var duration_min_3 = parseInt((tot_duration_3 % 3600) / 60);
        if (duration_min_3 < 10)
            duration_min_3 = '0' + duration_min_3;

        var result3 = duration_hour_3 + ':' + duration_min_3;
        $("#break2_duration").val(result3);


        //ENd Script Calculation.

        //debugger;

        var start_4 = $("#break3_start").val().split(':');
        var end_4 = $("#break3_end").val().split(':');


        var start_hours_4 = parseInt(start_4[0], 10) * 3600,
            end_hours_4 = parseInt(end_4[0], 10) * 3600;

        var start_min_4 = parseInt(start_4[1], 10) * 60;
        var end_min_4 = parseInt(end_4[1], 10) * 60;

        var tot_start_4 = start_hours_4 + start_min_4;
        var tot_end_4 = end_hours_4 + end_min_4;
        var tot_duration_4 = tot_end_4 - tot_start_4;
        if (tot_duration_4 < 0)
            tot_duration_4 = tot_duration_4 + hr24;

        var duration_hour_4 = parseInt(tot_duration_4 / 3600);
        if (duration_hour_4 < 10)
            duration_hour_4 = '0' + duration_hour_4;
        var duration_min_4 = parseInt((tot_duration_4 % 3600) / 60);
        if (duration_min_4 < 10)
            duration_min_4 = '0' + duration_min_4;

        var result4 = duration_hour_4 + ':' + duration_min_4;
        $("#break3_duration").val(result4);


        //ENd Script Calculation.

        //debugger;

        var start_5 = $("#half_day_start").val().split(':');
        var end_5 = $("#half_day_end").val().split(':');


        var start_hours_5 = parseInt(start_5[0], 10) * 3600,
            end_hours_5 = parseInt(end_5[0], 10) * 3600;

        var start_min_5 = parseInt(start_5[1], 10) * 60;
        var end_min_5 = parseInt(end_5[1], 10) * 60;

        var tot_start_5 = start_hours_5 + start_min_5;
        var tot_end_5 = end_hours_5 + end_min_5;
        var tot_duration_5 = tot_end_5 - tot_start_5;
        if (tot_duration_5 < 0)
            tot_duration_5 = tot_duration_5 + hr24;

        var duration_hour_5 = parseInt(tot_duration_5 / 3600);
        if (duration_hour_5 < 10)
            duration_hour_5 = '0' + duration_hour_5;
        var duration_min_5 = parseInt((tot_duration_5 % 3600) / 60);
        if (duration_min_5 < 10)
            duration_min_5 = '0' + duration_min_5;

        var result5 = duration_hour_5 + ':' + duration_min_5;
        $("#half_day_duration").val(result5);

     
    }

    $('SHIFT_END_TIME').keyup(function ($) {
        var starttime;
        var endtime;
        var result;
        starttime = moment($('SHIFT_START_TIME').val(), "HH:mm");
        endtime = moment($('SHIFT_END_TIME').val(), "HH:mm");
        var duration = moment.duration(endtime.diff(starttime));
        result = moment(duration, "HH:mm");
        alert(result);
        $('SHIFT_DURATION').val(result);
    });
</script>


@using (@Html.BeginForm())
{@Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4> Add Shift </h4>
</div>


<div>
    @Html.ActionLink("Back to Shift List", "GetAll")


    @Html.ValidationSummary(true, "", new { @class = "text-danger" })




    @*<table class="table" border="1" style="border-collapse: collapse;" cellpadding="3" align="center">*@
    <table class="table" cellpadding="3" align="center">
        <tr>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
        </tr>
        <tr>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
        </tr>
        <tr>
            <td>  </td>
            <td> @Html.LabelFor(model => model.CMP_ID, htmlAttributes: new { @class = "control-label col-md-2" }) </td>
            <td> @Html.DropDownListFor(model => model.CMP_ID, new SelectList(ViewBag.cr, "CMP_ID", "CMP_NAME"), "Select Branch") </td>
            <td>  </td>
            <td> @Html.LabelFor(model => model.BRANCH_ID, htmlAttributes: new { @class = "control-label col-md-2" }) </td>
            <td> @Html.DropDownListFor(model => model.BRANCH_ID, new SelectList(ViewBag.br, "BRANCH_ID", "BRANCH_NAME"), "Select Branch") </td>
            <td>  </td>
            <td> @Html.LabelFor(model => model.DEPARTMENT_ID, htmlAttributes: new { @class = "control-label col-md-2" }) </td>
            <td> @Html.DropDownListFor(model => model.DEPARTMENT_ID, new SelectList(ViewBag.dr, "DEPARTMENT_ID", "DEPARTMENT_NAME"), "Select Department") </td>
            <td>  </td>
        </tr>
        <tr>
            <td></td>
            <td></td>
            <td> @Html.ValidationMessageFor(model => model.CMP_ID, "", new { @class = "text-danger" }) </td>
            <td></td>
            <td></td>
            <td> @Html.ValidationMessageFor(model => model.BRANCH_ID, "", new { @class = "text-danger" }) </td>
            <td></td>
            <td></td>
            <td>@Html.ValidationMessageFor(model => model.DEPARTMENT_ID, "", new { @class = "text-danger" })</td>
            <td>  </td>
        </tr>

        <tr>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
        </tr>

        <tr>
            <td>  </td>
            <td> @Html.LabelFor(model => model.SHIFT_NAME, htmlAttributes: new { @class = "control-label col-md-2" }) </td>
            <td> @Html.EditorFor(model => model.SHIFT_NAME, new { htmlAttributes = new { @class = "form-control" } }) </td>
            <td>  </td>
            <td> @Html.LabelFor(model => model.DESCRIPTION, htmlAttributes: new { @class = "control-label col-md-2" }) </td>
            <td colspan=" 4 "> @Html.TextAreaFor(model => model.DESCRIPTION, 2, 60, new { htmlAttributes = new { @class = "form-control" } }) </td>
            <td>  </td>

        </tr>

        <tr>
            <td>  </td>
            <td>  </td>
            <td> @Html.ValidationMessageFor(model => model.SHIFT_NAME, "", new { @class = "text-danger" }) </td>
            <td>  </td>
            <td>  </td>
            <td colspan="4"> @Html.ValidationMessageFor(model => model.DESCRIPTION, "", new { @class = "text-danger" }) </td>
            <td>  </td>

        </tr>

        <tr>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
        </tr>

        <tr>
            <td>  </td>
            <td> @Html.LabelFor(model => model.SHIFT_START_TIME, htmlAttributes: new { @class = "control-label col-md-2" }) </td>
            <td> @Html.EditorFor(model => model.SHIFT_START_TIME, new { htmlAttributes = new { @id = "shift_start", @class = "form-time1",  @onchange = "validateTime(this); " } }) </td>

            <td>  </td>
            <td> @Html.LabelFor(model => model.SHIFT_END_TIME, htmlAttributes: new { @class = "control-label col-md-2" }) </td>
            <td> @Html.EditorFor(model => model.SHIFT_END_TIME, new { htmlAttributes = new { @id = "shift_end", @class = "form-time2", @onchange = "validateTime(this); " } }) </td>
            <td>  </td>
            <td> @Html.LabelFor(model => model.SHIFT_DURATION, htmlAttributes: new { @class = "control-label col-md-2" }) </td>
            <td> @Html.EditorFor(model => model.SHIFT_DURATION, new { htmlAttributes = new { @id = "shift_duration", @class = "form-time3" } }) </td>
            <td>  </td>
        </tr>

        <tr>
            <td>  </td>
            <td>  </td>
            <td> @Html.ValidationMessageFor(model => model.SHIFT_START_TIME, "", new { @class = "text-danger" }) </td>
            <td>  </td>
            <td>  </td>
            <td> @Html.ValidationMessageFor(model => model.SHIFT_END_TIME, "", new { @class = "text-danger" }) </td>
            <td>  </td>
            <td>  </td>
            <td> @Html.ValidationMessageFor(model => model.SHIFT_DURATION, "", new { @class = "text-danger" }) </td>
            <td>  </td>
        </tr>

        <tr>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
        </tr>
        <tr>

            <td> @Html.LabelFor(model => model.BREAK1, htmlAttributes: new { @class = "control-label col-md-2" }) : @Html.CheckBoxFor(model => model.BREAK1, new { htmlAttributes = new { @class = "check_box", @id = "isNews" } }) </td>
        

            <td>  @Html.LabelFor(model => model.BREAK1_START_TIME, htmlAttributes: new { @class = "control-label col-md-2" }) </td>
            <td> @Html.EditorFor(model => model.BREAK1_START_TIME, new { htmlAttributes = new { @id = "break1_start", @class = "form-time4", @onchange = "validateTime(this); " } }) </td>
            <td>  </td>
            <td> @Html.LabelFor(model => model.BREAK1_END_TIME, htmlAttributes: new { @class = "control-label col-md-2" }) </td>
            <td> @Html.EditorFor(model => model.BREAK1_END_TIME, new { htmlAttributes = new { @id = "break1_end", @class = "form-time5", @onchange = "validateTime(this); " } }) </td>
            <td>  </td>
            <td> @Html.LabelFor(model => model.BREAK1_DURATION, htmlAttributes: new { @class = "control-label col-md-2" }) </td>
            <td> @Html.EditorFor(model => model.BREAK1_DURATION, new { htmlAttributes = new { @id = "break1_duration", @class = "form-time6" } }) </td>
            <td>  </td>
        </tr>
        <tr>
            <td> @Html.ValidationMessageFor(model => model.BREAK1, "", new { @class = "text-danger" }) </td>
            <td>  </td>
            <td> @Html.ValidationMessageFor(model => model.BREAK1_START_TIME, "", new { @class = "text-danger" }) </td>
            <td>  </td>
            <td>  </td>
            <td> @Html.ValidationMessageFor(model => model.BREAK1_END_TIME, "", new { @class = "text-danger" }) </td>
            <td>  </td>
            <td>  </td>
            <td> @Html.ValidationMessageFor(model => model.BREAK1_DURATION, "", new { @class = "text-danger" }) </td>
            <td>  </td>
        </tr>

        <tr>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
        </tr>
        <tr>
            <td> @Html.LabelFor(model => model.BREAK2, htmlAttributes: new { @class = "control-label col-md-2" }) : @Html.EditorFor(model => model.BREAK2, new { htmlAttributes = new { @class = "form-control" } })</td>
            <td> @Html.LabelFor(model => model.BREAK2_START_TIME, htmlAttributes: new { @class = "control-label col-md-2" }) </td>
            <td> @Html.EditorFor(model => model.BREAK2_START_TIME, new { htmlAttributes = new { @id = "break2_start", @class = "form-time7", @onchange = "validateTime(this); " } }) </td>
            <td>  </td>
            <td> @Html.LabelFor(model => model.BREAK2_END_TIME, htmlAttributes: new { @class = "control-label col-md-2" }) </td>
            <td> @Html.EditorFor(model => model.BREAK2_END_TIME, new { htmlAttributes = new { @id = "break2_end", @class = "form-time8", @onchange = "validateTime(this); " } }) </td>
            <td>  </td>
            <td> @Html.LabelFor(model => model.BREAK2_DURATION, htmlAttributes: new { @class = "control-label col-md-2" }) </td>
            <td> @Html.EditorFor(model => model.BREAK2_DURATION, new { htmlAttributes = new { @id = "break2_duration", @class = "form-time9" } }) </td>
            <td>  </td>
        </tr>
        <tr>
            <td> @Html.ValidationMessageFor(model => model.BREAK2, "", new { @class = "text-danger" }) </td>
            <td>  </td>
            <td> @Html.ValidationMessageFor(model => model.BREAK2_START_TIME, "", new { @class = "text-danger" }) </td>
            <td>  </td>
            <td>  </td>
            <td> @Html.ValidationMessageFor(model => model.BREAK2_END_TIME, "", new { @class = "text-danger" }) </td>
            <td>  </td>
            <td>  </td>
            <td> @Html.ValidationMessageFor(model => model.BREAK2_DURATION, "", new { @class = "text-danger" }) </td>
            <td>  </td>
        </tr>
        <tr>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
        </tr>
        <tr>
            <td> @Html.LabelFor(model => model.BREAK3, htmlAttributes: new { @class = "control-label col-md-2" }) : @Html.EditorFor(model => model.BREAK3, new { htmlAttributes = new { @class = "form-control" } }) </td>
            <td> @Html.LabelFor(model => model.BREAK3_START_TIME, htmlAttributes: new { @class = "control-label col-md-2" }) </td>
            <td> @Html.EditorFor(model => model.BREAK3_START_TIME, new { htmlAttributes = new { @id = "break3_start", @class = "form-time10", @onchange = "validateTime(this); " } }) </td>
            <td>  </td>
            <td> @Html.LabelFor(model => model.BREAK3_END_TIME, htmlAttributes: new { @class = "control-label col-md-2" }) </td>
            <td> @Html.EditorFor(model => model.BREAK3_END_TIME, new { htmlAttributes = new { @id = "break3_end", @class = "form-time11", @onchange = "validateTime(this); " } }) </td>
            <td>  </td>
            <td> @Html.LabelFor(model => model.BREAK3_DURATION, htmlAttributes: new { @class = "control-label col-md-2" }) </td>
            <td> @Html.EditorFor(model => model.BREAK3_DURATION, new { htmlAttributes = new { @id = "break3_duration", @class = "form-time12" } }) </td>
            <td>  </td>
        </tr>
        <tr>
            <td> @Html.ValidationMessageFor(model => model.BREAK3, "", new { @class = "text-danger" }) </td>
            <td>  </td>
            <td> @Html.ValidationMessageFor(model => model.BREAK3_START_TIME, "", new { @class = "text-danger" }) </td>
            <td>  </td>
            <td>  </td>
            <td> @Html.ValidationMessageFor(model => model.BREAK3_END_TIME, "", new { @class = "text-danger" }) </td>
            <td>  </td>
            <td>  </td>
            <td> @Html.ValidationMessageFor(model => model.BREAK3_DURATION, "", new { @class = "text-danger" }) </td>
            <td>  </td>
        </tr>
        <tr>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
        </tr>
        <tr>
            <td> @Html.LabelFor(model => model.HALF_DAY_ON, htmlAttributes: new { @class = "control-label col-md-2" }) : @Html.CheckBoxFor(model => model.HALF_DAY_ON, new { htmlAttributes = new { @class = "form-control" } }) </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td> @Html.LabelFor(model => model.HALF_DAY_OF_WEEK, htmlAttributes: new { @class = "control-label col-md-2" }) </td>
            <td> @Html.EditorFor(model => model.HALF_DAY_OF_WEEK, new { htmlAttributes = new { @class = "form-control_halfDay"  } }) </td>
            <td>  </td>
            <td> @Html.LabelFor(model => model.HALF_DAY_MIN_HOURS, htmlAttributes: new { @class = "control-label col-md-2" }) </td>
            <td> @Html.EditorFor(model => model.HALF_DAY_MIN_HOURS, new { htmlAttributes = new { @class = "form-control_halfDay" } }) </td>
            <td>  </td>
        </tr>
        <tr>
            <td> @Html.ValidationMessageFor(model => model.HALF_DAY_ON, "", new { @class = "text-danger" }) </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td> @Html.ValidationMessageFor(model => model.HALF_DAY_OF_WEEK, "", new { @class = "text-danger" }) </td>
            <td>  </td>
            <td>  </td>
            <td> @Html.ValidationMessageFor(model => model.HALF_DAY_MIN_HOURS, "", new { @class = "text-danger" }) </td>
            <td>  </td>
        </tr>

        <tr>
            <td>  </td>
            <td> @Html.LabelFor(model => model.HALF_DAY_START_TIME, htmlAttributes: new { @class = "control-label col-md-2" }) </td>
            <td> @Html.EditorFor(model => model.HALF_DAY_START_TIME, new { htmlAttributes = new { @id = "half_day_start", @class = "form-control_halfDay1", @onchange = "validateTime(this); " } }) </td>
            <td>  </td>
            <td> @Html.LabelFor(model => model.HALF_DAY_END_TIME, htmlAttributes: new { @class = "control-label col-md-2" }) </td>
            <td> @Html.EditorFor(model => model.HALF_DAY_END_TIME, new { htmlAttributes = new { @id = "half_day_end", @class = "form-control_halfDay2", @onchange = "validateTime(this); " } }) </td>
            <td>  </td>
            <td> @Html.LabelFor(model => model.HALF_DAY_DURATION, htmlAttributes: new { @class = "control-label col-md-2" }) </td>
            <td> @Html.EditorFor(model => model.HALF_DAY_DURATION, new { htmlAttributes = new { @id = "half_day_duration", @class = "form-control" } }) </td>
            <td>  </td>
        </tr>

        <tr>
            <td>  </td>
            <td>  </td>
            <td> @Html.ValidationMessageFor(model => model.HALF_DAY_START_TIME, "", new { @class = "text-danger" }) </td>
            <td>  </td>
            <td>  </td>
            <td> @Html.ValidationMessageFor(model => model.HALF_DAY_END_TIME, "", new { @class = "text-danger" }) </td>
            <td>  </td>
            <td>  </td>
            <td> @Html.ValidationMessageFor(model => model.HALF_DAY_DURATION, "", new { @class = "text-danger" }) </td>
            <td>  </td>
        </tr>


        <tr>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
        </tr>


        <tr>
            <td>  </td>

            <td> @Html.LabelFor(model => model.AUTO_SHIFT, htmlAttributes: new { @class = "control-label col-md-2" }) </td>
            <td> @Html.EditorFor(model => model.AUTO_SHIFT, new { htmlAttributes = new { @class = "form-control_halfDay6" } }) </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
        </tr>

        <tr>
            <td>  </td>
            <td> @Html.ValidationMessageFor(model => model.AUTO_SHIFT, "", new { @class = "text-danger" }) </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
        </tr>

        <tr>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
        </tr>


        <tr>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td> <input type="submit" value="Save" class="btn btn-default" /> </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
            <td>  </td>
        </tr>


        <tr>
            <td>
            </td>
            <td>
            </td>
            <td>
            </td>
            <td>
            </td>
        </tr>
    </table>

    @ViewBag.Message
    <div class="form-group">

        <span>

        </span>
        <div class="col-md-10">


        </div>
    </div>


    <div class="form-group">

        <span>

        </span>
        <div class="col-md-10">




        </div>
    </div>
    <div class="form-group">
        @Html.HiddenFor(model => model.DEPARTMENT_ID)
    </div>

    <div class="form-group">
        @Html.HiddenFor(model => model.CREATED_DATE)
    </div>

    <div class="form-group">
        @Html.HiddenFor(model => model.MODIFIED_DATE)
    </div>

    <div class="form-group">
        @Html.HiddenFor(model => model.BRANCH_NAME)
    </div>


    @*
        <div class="form-group">
            @Html.LabelFor(model => model.BRANCH_ID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BRANCH_ID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BRANCH_ID, "", new { @class = "text-danger" })
            </div>
        </div>
    *@


    <div class="form-group">

        <span>

        </span>
        <div class="col-md-10">


        </div>
    </div>

    <div class="form-group">


        <span>

        </span>
        <div class="col-md-10">


        </div>
    </div>

    @*<div class = "form-group" >
            @Html.LabelFor(model => model.Address, htmlAttributes: new{@class = "control-label col-md-2"})
        <div class = "col-md-10" >
            @Html.EditorFor(model => model.Address, new{htmlAttributes = new{@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Address, "", new {@class = "text-danger"})
            </div>*@
</div>

<div class="form-group">
    <div class="col-md-offset-2 col-md-10">

    </div>
</div>
<div class="form-group">
    <div class="col-md-offset-2 col-md-10" style="color:green">


    </div>
</div>


}
@*<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js">

</script>*@ 